#version 450 core

layout(local_size_x = 8, local_size_y = 8, local_size_z = 8) in;

layout(r8ui, binding = 0) uniform uimage3D o_Texture;
layout(r8ui, binding = 1) uniform uimage3D o_Texture1;
layout(r8ui, binding = 2) uniform uimage3D o_Texture2;
layout(r8ui, binding = 3) uniform uimage3D o_Texture3;

uniform vec3 u_Position;

uniform int u_Res;
uniform float u_Size;

layout (std430, binding = 0) buffer atomicLightIDS {
    int LightIndicesCounter[];
};

int Idx3DToLinear(int x, int y, int z) {
	return (z * u_Res * u_Res) + (y * u_Res) + x;
}

vec3 ToWorldSpace(vec3 VoxelPos) {
	VoxelPos /= float(u_Res);
	vec3 W = u_Size * (VoxelPos - 0.5f);
	W += u_Position;
	return W;
}

void main() { 
	ivec3 Texel =  ivec3(gl_GlobalInvocationID.xyz);

	int LinearIndex = Idx3DToLinear(Texel.x, Texel.y, Texel.z);

	int CurrentLID = atomicAdd(LightIndicesCounter[LinearIndex], 1);
	barrier();

	vec3 WPos = ToWorldSpace(vec3(Texel));
	bool t = false;

	if (distance(WPos, vec3(1.0f, 1.0f, 1.0f)) < 4.) {
		t= true;
	}

	imageStore(o_Texture, ivec3(gl_GlobalInvocationID.xyz), t? ivec4(1) : ivec4(0));
} 